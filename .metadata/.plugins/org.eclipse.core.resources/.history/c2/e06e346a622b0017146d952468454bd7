package main;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.StringReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Unmarshaller;
import javax.xml.transform.stream.StreamSource;

import org.eclipse.persistence.jaxb.JAXBContextFactory;
import org.eclipse.persistence.jaxb.MarshallerProperties;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.RequestMethod;

import entity.HistoriqueOperations;

public class MainJson {

	public static void main(String[] args) throws JAXBException, IOException {
		// ou "http://localhost:8080/infos?username=oR"
		String uri = "http://localhost:8080/infos?username=JQuincy";
		URL url = new URL(uri);
		HttpURLConnection connection = (HttpURLConnection) url.openConnection();
		connection.setRequestMethod(RequestMethod.GET.name());
		connection.setRequestProperty("Accept", MediaType.APPLICATION_JSON_VALUE);

		 InputStream is = connection.getInputStream();
		 BufferedReader rd = new BufferedReader(new InputStreamReader(is));
		 StringBuffer response = new StringBuffer();
		 String line;
		 while ((line = rd.readLine()) != null) {
		 response.append(line).append('\r');
		 }
		 connection.disconnect();
		 System.out.println("response :" + response.toString());

		Map<String, Object> properties = new HashMap<String, Object>();
		properties.put("eclipselink.media - type", "application/json");
		properties.put(MarshallerProperties.JSON_INCLUDE_ROOT, false);

		JAXBContext ctx = JAXBContextFactory.createContext(new Class[] { HistoriqueOperations.class }, properties);
		
		StringBuffer xmlStr = new StringBuffer( "<?xml version="1.0"?>..." );
	       Object o = u.unmarshal( new StreamSource( new StringReader( xmlStr.toString() ) ) );
	    
	       
		Unmarshaller jsonUnmarshaller = ctx.createUnmarshaller();
		StreamSource jsonStream2 = new StreamSource(connection.getInputStream());
		List<HistoriqueOperations> lstHisto = (List<HistoriqueOperations>) jsonUnmarshaller
				.unmarshal(jsonStream2, HistoriqueOperations.class).getValue();

		connection.disconnect();

		for (HistoriqueOperations historique : lstHisto) {
			System.out.println(historique);
		}
	}

}
